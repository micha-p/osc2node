/*
  $Id$

  osCommerce, Open Source E-Commerce Solutions
  http://www.oscommerce.com

  Copyright (c) 2010 osCommerce

  Released under the GNU General Public License
*/

breadcrumb.add(NAVBAR_TITLE, tep_href_link(FILENAME_REVIEWS));
eval(fs.readFileSync(DIR_WS_INCLUDES + 'template_top.js').toString())

print('')
print('<h1>' + HEADING_TITLE + '</h1>')
print('')
print('<div class="contentContainer">')
print('')
print('')

reviews_query_raw = 'select r.reviews_id, left(rd.reviews_text, 100) as reviews_text, '
                    + 'r.reviews_rating, r.date_added, p.products_id, pd.products_name, p.products_image, r.customers_name ' 
                    + 'from ' 
                    + TABLE_REVIEWS 
                    + ' r, ' 
                    + TABLE_REVIEWS_DESCRIPTION 
                    + ' rd, ' 
                    + TABLE_PRODUCTS 
                    + ' p, ' 
                    + TABLE_PRODUCTS_DESCRIPTION 
                    + ' pd where p.products_status = \'1\' and p.products_id = r.products_id and r.reviews_id = rd.reviews_id and p.products_id = pd.products_id and pd.language_id = \'' 
                    + languages_id 
                    + '\' and rd.languages_id = \'' 
                    + languages_id 
                    + '\' and reviews_status = 1 order by r.reviews_id DESC'
                    
reviews_split = new splitPageResults(reviews_query_raw, MAX_DISPLAY_NEW_REVIEWS);
if (reviews_split.number_of_rows > 0) {
    if (PREV_NEXT_BAR_LOCATION == '1' || PREV_NEXT_BAR_LOCATION == '3') {
        print('')
        print('  <div class="contentText">')
        print('    <p style="float: right;">')
        
        print(TEXT_RESULT_PAGE + ' ' + reviews_split.display_links(MAX_DISPLAY_PAGE_LINKS, tep_get_all_get_params(['page', 'info'])));
        print('</p>')
        print('')
        print('    <p>')
        
        print(reviews_split.display_count(TEXT_DISPLAY_NUMBER_OF_REVIEWS));
        print('</p>')
        print('  </div>')
        print('')
        print('  <br />')
        print('')
        print('')
    
    }
    reviews_query = tep_db_query(reviews_split.sql_query)
    var rarray = tep_db_fetch_array(reviews_query)
    for (var r in rarray) {
    	  reviews = rarray[r]
        print('')
        print('  <div>')
        print('    <span style="float: right;">')
        
        print(sprintf(TEXT_REVIEW_DATE_ADDED, tep_date_long(reviews['date_added'])));
        print('</span>')
        print('    <h2>')
        
        print('<a href="' + tep_href_link(FILENAME_PRODUCT_REVIEWS_INFO, 'products_id=' + reviews['products_id'] + '&reviews_id=' + reviews['reviews_id']) + '">' + reviews['products_name'] + '</a> <span class="smallText">' + sprintf(TEXT_REVIEW_BY, tep_output_string_protected(reviews['customers_name'])) + '</span>');
        print('</h2>')
        print('  </div>')
        print('')
        print('  <div class="contentText">')
        print('    <table border="0" width="100%" cellspacing="0" cellpadding="2">')
        print('      <tr>')
        print('        <td width="')
        
        print(SMALL_IMAGE_WIDTH + 10);
        print('" align="center" valign="top" class="main">')
        
        print('<a href="' + tep_href_link(FILENAME_PRODUCT_REVIEWS_INFO, 'products_id=' + reviews['products_id'] + '&reviews_id=' + reviews['reviews_id']) + '">' + tep_image(DIR_WS_IMAGES + reviews['products_image'], reviews['products_name'], SMALL_IMAGE_WIDTH, SMALL_IMAGE_HEIGHT) + '</a>');
        print('</td>')
        print('        <td valign="top">')
        
        print(tep_break_string(tep_output_string_protected(reviews['reviews_text']), 60, '-<br />') 
              + (strlen(reviews['reviews_text']) >= 100 &&  '..'  || '') 
              + '<br /><br />'
              + '<i>' 
              + sprintf(TEXT_REVIEW_RATING, tep_image(DIR_WS_IMAGES 
                                                      + 'stars_' 
                                                      + reviews['reviews_rating'] 
                                                      + '.gif', sprintf(TEXT_OF_5_STARS, reviews['reviews_rating'])),sprintf(TEXT_OF_5_STARS, reviews['reviews_rating'])) 
              + '</i>');
        print('</td>')
        print('      </tr>')
        print('    </table>')
        print('  </div>')
        print('')
        print('')
    
    }
} else {
    print('')
    print('  <div class="contentText">')
    print('    ')
    
    print(TEXT_NO_REVIEWS);
    print('  </div>')
    print('')
    print('')

}
if (reviews_split.number_of_rows > 0 && (PREV_NEXT_BAR_LOCATION == '2' || PREV_NEXT_BAR_LOCATION == '3')) {
    print('')
    print('  <br />')
    print('')
    print('  <div class="contentText">')
    print('    <p style="float: right;">')
    
    print(TEXT_RESULT_PAGE + ' ' + reviews_split.display_links(MAX_DISPLAY_PAGE_LINKS, tep_get_all_get_params(['page', 'info'])));
    print('</p>')
    print('')
    print('    <p>')
    
    print(reviews_split.display_count(TEXT_DISPLAY_NUMBER_OF_REVIEWS));
    print('</p>')
    print('  </div>')
    print('')
    print('')

}
print('')
print('</div>')
print('')
print('')