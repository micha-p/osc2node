/*
  $Id$

  osCommerce, Open Source E-Commerce Solutions
  http://www.oscommerce.com

  Copyright (c) 2010 osCommerce

  Released under the GNU General Public License
*/


/* SKIPPED
if (cart.count_contents() > 0) {
    var DIR_WS_CLASSES + 'payment.php' = include(DIR_WS_CLASSES + 'payment.php');
    payment_modules = new payment();
}
*/

breadcrumb.add(NAVBAR_TITLE, tep_href_link(FILENAME_PRODUCT_REVIEWS));
eval(fs.readFileSync(DIR_WS_INCLUDES + 'template_top.js').toString())


print('')
print('<h1>' + HEADING_TITLE + '</h1>')
print('')
print('')

if (cart.count_contents() > 0) {
    print('')
    print('')
    
    print(tep_draw_form('cart_quantity', tep_href_link(FILENAME_SHOPPING_CART, 'action=update_product')));
    print('')
    print('<div class="contentContainer">')
    print('  <h2>')
    
    print(TABLE_HEADING_PRODUCTS);
    print('</h2>')
    print('')
    print('  <div class="contentText">')
    print('')
    print('')
    
    any_out_of_stock = 0;
    products = cart.get_products();
    for (i = 0, n = sizeof(products); i < n; i++) {
        // Push all attributes information in an array
        if (products[i]['attributes'] && is_array(products[i]['attributes'])) {
            while (list(option, value) = each(products[i]['attributes'])) {
                print(tep_draw_hidden_field('id[' + products[i]['id'] + '][' + option + ']', value));
                attributes = tep_db_query('select popt.products_options_name, poval.products_options_values_name, pa.options_values_price, pa.price_prefix
                                      from ' + TABLE_PRODUCTS_OPTIONS + ' popt, ' + TABLE_PRODUCTS_OPTIONS_VALUES + ' poval, ' + TABLE_PRODUCTS_ATTRIBUTES + ' pa
                                      where pa.products_id = \'' + (int) products[i]['id'] + '\'
                                       and pa.options_id = \'' + (int) option + '\'
                                       and pa.options_id = popt.products_options_id
                                       and pa.options_values_id = \'' + (int) value + '\'
                                       and pa.options_values_id = poval.products_options_values_id
                                       and popt.language_id = \'' + (int) languages_id + '\'
                                       and poval.language_id = \'' + (int) languages_id + '\'');
                attributes_values = tep_db_fetch_array(attributes);
                products[i][option]['products_options_name'] = attributes_values['products_options_name'];
                products[i][option]['options_values_id'] = value;
                products[i][option]['products_options_values_name'] = attributes_values['products_options_values_name'];
                products[i][option]['options_values_price'] = attributes_values['options_values_price'];
                products[i][option]['price_prefix'] = attributes_values['price_prefix'];
            }
        }
    }
    print('')
    print('    <table border="0" width="100%" cellspacing="0" cellpadding="0">')
    print('')
    print('')
    
    for (i = 0, n = sizeof(products); i < n; i++) {
        print('      <tr>');
        products_name = '<table border="0" cellspacing="2" cellpadding="2">' + '  <tr>' + '    <td align="center"><a href="' + tep_href_link(FILENAME_PRODUCT_INFO, 'products_id=' + products[i]['id']) + '">' + tep_image(DIR_WS_IMAGES + products[i]['image'], products[i]['name'], SMALL_IMAGE_WIDTH, SMALL_IMAGE_HEIGHT) + '</a></td>' + '    <td valign="top"><a href="' + tep_href_link(FILENAME_PRODUCT_INFO, 'products_id=' + products[i]['id']) + '"><strong>' + products[i]['name'] + '</strong></a>';
        if (STOCK_CHECK == 'true') {
            stock_check = tep_check_stock(products[i]['id'], products[i]['quantity']);
            if (tep_not_null(stock_check)) {
                any_out_of_stock = 1;
                products_name += stock_check;
            }
        }
        if (products[i]['attributes'] && is_array(products[i]['attributes'])) {
            reset(products[i]['attributes']);
            while (list(option, value) = each(products[i]['attributes'])) {
                products_name += '<br /><small><i> - ' + products[i][option]['products_options_name'] + ' ' + products[i][option]['products_options_values_name'] + '</i></small>';
            }
        }
        products_name += '<br /><br />' + tep_draw_input_field('cart_quantity[]', products[i]['quantity'], 'size="4"') + tep_draw_hidden_field('products_id[]', products[i]['id']) + tep_draw_button(IMAGE_BUTTON_UPDATE, 'refresh') + '&nbsp;&nbsp;&nbsp;' + TEXT_OR + '<a href="' + tep_href_link(FILENAME_SHOPPING_CART, 'products_id=' + products[i]['id'] + '&action=remove_product') + '">' + TEXT_REMOVE + '</a>';
        products_name += '    </td>' + '  </tr>' + '</table>';
        print('        <td valign="top">' + products_name + '</td>' + '        <td align="right" valign="top"><strong>' + currencies.display_price(products[i]['final_price'], tep_get_tax_rate(products[i]['tax_class_id']), products[i]['quantity']) + '</strong></td>' + '      </tr>');
    }
    print('')
    print('    </table>')
    print('')
    print('    <p align="right"><strong>')
    
    print(SUB_TITLE_SUB_TOTAL);
    print(' ')
    
    print(currencies.format(cart.show_total()));
    print('</strong></p>')
    print('')
    print('')
    
    if (any_out_of_stock == 1) {
        if (STOCK_ALLOW_CHECKOUT == 'true') {
            print('')
            print('    <p class="stockWarning" align="center">')
            
            print(OUT_OF_STOCK_CAN_CHECKOUT);
            print('</p>')
            print('')
            print('')
        
        } else {
            print('')
            print('    <p class="stockWarning" align="center">')
            
            print(OUT_OF_STOCK_CANT_CHECKOUT);
            print('</p>')
            print('')
            print('')
        
        }
    }
    print('')
    print('  </div>')
    print('')
    print('  <div class="buttonSet">')
    print('    <span class="buttonAction">')
    
    print(tep_draw_button(IMAGE_BUTTON_CHECKOUT, 'triangle-1-e', tep_href_link(FILENAME_CHECKOUT_SHIPPING, '', 'SSL'), 'primary'));
    print('</span>')
    print('  </div>')
    print('')
    print('')
    
    initialize_checkout_methods = payment_modules.checkout_initialization_method();
    if (!empty(initialize_checkout_methods)) {
        print('')
        print('  <p align="right" style="clear: both; padding: 15px 50px 0 0;">')
        
        print(TEXT_ALTERNATIVE_CHECKOUT_METHODS);
        print('</p>')
        print('')
        print('')
        
        reset(initialize_checkout_methods);
        while (list(, value) = each(initialize_checkout_methods)) {
            print('')
            print('  <p align="right">')
            
            print(value);
            print('</p>')
            print('')
            print('')
        
        }
    }
    print('')
    print('</div>')
    print('')
    print('</form>')
    print('')
    print('')

} else {
    print('')
    print('<div class="contentContainer">')
    print('  <div class="contentText">')
    print('    ')
    
    print(TEXT_CART_EMPTY);
    print('')
    print('    <p align="right">')
    
    print(tep_draw_button(IMAGE_BUTTON_CONTINUE, 'triangle-1-e', tep_href_link(FILENAME_DEFAULT)));
    print('</p>')
    print('  </div>')
    print('</div>')
    print('')
    print('')

}
