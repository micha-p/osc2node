/*
  $Id$

  osCommerce, Open Source E-Commerce Solutions
  http://www.oscommerce.com

  Copyright (c) 2014 osCommerce

  Released under the GNU General Public License
*/



if (typeof HTTP_GET_VARS['products_id'] == 'undefined') {tep_redirect(tep_href_link(FILENAME_DEFAULT))}


eval(fs.readFileSync(DIR_WS_LANGUAGES + language + '/' + FILENAME_PRODUCT_INFO).toString())

product_check_query = tep_db_query('select count(*) as total from ' 
                                   + TABLE_PRODUCTS 
                                   + ' p, ' 
                                   + TABLE_PRODUCTS_DESCRIPTION 
                                   + ' pd where p.products_status = \'1\' and p.products_id = \'' 
                                   + HTTP_GET_VARS['products_id'] 
                                   + '\' and pd.products_id = p.products_id and pd.language_id = \'' 
                                   + languages_id + '\'');
product_check = tep_db_fetch_array(product_check_query)

eval(fs.readFileSync(DIR_WS_INCLUDES + 'template_top.js').toString())

if (product_check['total'] < 1) {
    print('')
    print('<div class="contentContainer">')
    print('  <div class="contentText">')
    print('    ')
    
    print(TEXT_PRODUCT_NOT_FOUND);
    print('  </div>')
    print('')
    print('  <div style="float: right;">')
    print('    ')
    
    print(tep_draw_button(IMAGE_BUTTON_CONTINUE, 'triangle-1-e', tep_href_link(FILENAME_DEFAULT)));
    print('  </div>')
    print('</div>')
    print('')
    print('')

} else {
    product_info_query = tep_db_query('select p.products_id, pd.products_name, pd.products_description, p.products_model, p.products_quantity, p.products_image, pd.products_url, p.products_price, p.products_tax_class_id, p.products_date_added, p.products_date_available, p.manufacturers_id from ' 
                                     + TABLE_PRODUCTS 
                                     + ' p, ' 
                                     + TABLE_PRODUCTS_DESCRIPTION 
                                     + ' pd where p.products_status = \'1\' and p.products_id = \'' 
                                     + HTTP_GET_VARS['products_id'] 
                                     + '\' and pd.products_id = p.products_id and pd.language_id = \'' 
                                     + languages_id + '\'');
    product_array = tep_db_fetch_array(product_info_query);
    product_info = product_array[0]
    tep_db_query('update ' 
                + TABLE_PRODUCTS_DESCRIPTION 
                + ' set products_viewed = products_viewed+1 where products_id = \'' 
                + HTTP_GET_VARS['products_id'] 
                + '\' and language_id = \'' 
                + languages_id 
                + '\'');
    if (new_price = tep_get_products_special_price(product_info['products_id'])) {
        products_price = '<del>' 
        					+ currencies.display_price(product_info['products_price'], tep_get_tax_rate(product_info['products_tax_class_id'])) 
        					+ '</del> <span class="productSpecialPrice">' 
        					+ currencies.display_price(new_price, tep_get_tax_rate(product_info['products_tax_class_id'])) 
        					+ '</span>';
    } else {
        products_price = currencies.display_price(product_info['products_price'], tep_get_tax_rate(product_info['products_tax_class_id']));
    }
    
    if (DEBUG) PRINT('PRICE' + product_info['products_price'] + ' TAX' + tep_get_tax_rate(product_info['products_tax_class_id']))    
    
    if (tep_not_null(product_info['products_model'])) {
        products_name = product_info['products_name'] + '<br /><span class="smallText">[' + product_info['products_model'] + ']</span>';
    } else {
        products_name = product_info['products_name'];
    }
    print('')
    print('')
    
    print(tep_draw_form('cart_quantity', tep_href_link(FILENAME_PRODUCT_INFO, tep_get_all_get_params(['action']) + 'action=add_product')));
    print('')
    print('<div>')
    print('  <h1 style="float: right;">' + products_price + '</h1>')
    print('  <h1>'+ products_name + '</h1>')
    print('</div>')
    print('')
    print('<div class="contentContainer">')
    print('  <div class="contentText">')
    print('')
    print('')
    
    if (tep_not_null(product_info['products_image'])) {
        photoset_layout = '1';
        pi_query = tep_db_query('select image, htmlcontent from ' + TABLE_PRODUCTS_IMAGES + ' where products_id = \'' + product_info['products_id'] + '\' order by sort_order');
        pi_total = tep_db_num_rows(pi_query);
        if (pi_total > 0) {
            pi_sub = pi_total - 1;
            while (pi_sub > 5) {
                photoset_layout += 5;
                pi_sub = pi_sub - 5;
            }
            if (pi_sub > 0) {
                photoset_layout += pi_total > 5 &&  5  || pi_sub;
            }
            print('')
            print('    <div id="piGal">')
            print('')
            print('')
            
            pi_counter = 0;
            pi_html = [];
/*            while (pi = tep_db_fetch_array(pi_query)) {
                pi_counter++;
                if (tep_not_null(pi['htmlcontent'])) {
                    pi_html[pi_html.length] = '<div id="piGalDiv_' + pi_counter + '">' + pi['htmlcontent'] + '</div>';
                }
                print(tep_image(DIR_WS_IMAGES + pi['image'], '', '', '', 'id="piGalImg_' + pi_counter + '"'));
            }
*/            print('')
            print('    </div>')
            print('')
            print('')
            
            if (!empty(pi_html)) {
                print('    <div style="display: none;">' + implode('', pi_html) + '</div>');
            }
        } else {
            print('')
            print('    <div id="piGal">')
            print('      ')
            PRINT(' ADD IMAGE!' + DIR_WS_IMAGES + "+" + product_info['products_image'])
            print(tep_image(DIR_WS_IMAGES + product_info['products_image'], addslashes(product_info['products_name'])));
            print('    </div>')
            print('')
            print('')
        
        }
    }
    print("")
 /*   print('<script type="text/javascript">')
    print('$(function() {')
    print("  $('#piGal').css({")
    print("    'visibility': 'hidden'")
    print("  });")
    print("")
    print("  $('#piGal').photosetGrid({")
    print("    layout: \'' + photoset_layout + '\',")
    print("    width: '250px',")
    print("    highresLinks: true,")
    print("    rel: 'pigallery',")
    print("    onComplete: function() {")
    print("      $('#piGal').css({ 'visibility': 'visible'});")
    print("")
    print("      $('#piGal a').colorbox({")
    print("        maxHeight: '90%',")
    print("        maxWidth: '90%',")
    print("        rel: 'pigallery'")
    print("      });")
    print("")
    print("      $('#piGal img').each(function() {")
    print("        var imgid = $(this).attr('id').substring(9);")
    print("")
    print("        if ( $('#piGalDiv_' + imgid).length ) {")
    print("          $(this).parent().colorbox({ inline: true, href: '#piGalDiv_' + imgid });")
    print("        }")
    print("      });")
    print("    }")
    print("  });")
    print("});")
    print("</script>")
  */  print("")
    print("")
    
    print(stripslashes(product_info['products_description']));
    print('')
    print('')
    
    products_attributes_query = tep_db_query('select count(*) as total from ' + TABLE_PRODUCTS_OPTIONS + ' popt, ' + TABLE_PRODUCTS_ATTRIBUTES + ' patrib where patrib.products_id=\'' + HTTP_GET_VARS['products_id'] + '\' and patrib.options_id = popt.products_options_id and popt.language_id = \'' + languages_id + '\'');
    products_attributes = tep_db_fetch_array(products_attributes_query);
    if (products_attributes['total'] > 0) {
        print('')
        print('    <p>')
        
        print(TEXT_PRODUCT_OPTIONS);
        print('</p>')
        print('')
        print('    <p>')
        print('')
        
        products_options_name_query = tep_db_query('select distinct popt.products_options_id, popt.products_options_name from ' + TABLE_PRODUCTS_OPTIONS + ' popt, ' + TABLE_PRODUCTS_ATTRIBUTES + ' patrib where patrib.products_id=\'' + HTTP_GET_VARS['products_id'] + '\' and patrib.options_id = popt.products_options_id and popt.language_id = \'' + languages_id + '\' order by popt.products_options_name');
        while (products_options_name = tep_db_fetch_array(products_options_name_query)) {
            products_options_array = []
            products_options_query = tep_db_query('select pov.products_options_values_id, pov.products_options_values_name, pa.options_values_price, pa.price_prefix from ' + TABLE_PRODUCTS_ATTRIBUTES + ' pa, ' + TABLE_PRODUCTS_OPTIONS_VALUES + ' pov where pa.products_id = \'' + HTTP_GET_VARS['products_id'] + '\' and pa.options_id = \'' + products_options_name['products_options_id'] + '\' and pa.options_values_id = pov.products_options_values_id and pov.language_id = \'' + languages_id + '\'');
            while (products_options = tep_db_fetch_array(products_options_query)) {
                products_options_array[products_options_array.length] = {'id' : products_options['products_options_values_id'], 'text' : products_options['products_options_values_name']};
                if (products_options['options_values_price'] != '0') {
                    products_options_array[sizeof(products_options_array) - 1]['text'] += ' (' + products_options['price_prefix'] + currencies.display_price(products_options['options_values_price'], tep_get_tax_rate(product_info['products_tax_class_id'])) + ') ';
                }
            }
            if (is_string(HTTP_GET_VARS['products_id']) && cart.contents[HTTP_GET_VARS['products_id']]['attributes'][products_options_name['products_options_id']]) {
                selected_attribute = cart.contents[HTTP_GET_VARS['products_id']]['attributes'][products_options_name['products_options_id']];
            } else {
                selected_attribute = false;
            }
            print('      <strong>')
            
            print(products_options_name['products_options_name'] + ':');
            print('</strong><br />')
            
            print(tep_draw_pull_down_menu('id[' + products_options_name['products_options_id'] + ']', products_options_array, selected_attribute));
            print('<br />')
            print('')
        
        }
        print('    </p>')
        print('')
        print('')
    
    }
    print('')
    print('    <div style="clear: both;"></div>')
    print('')
    print('')
    
    if (product_info['products_date_available'] > date('Y-m-d H:i:s')) {
        print('')
        print('    <p style="text-align: center;">')
        
        print(sprintf(TEXT_DATE_AVAILABLE, tep_date_long(product_info['products_date_available'])));
        print('</p>')
        print('')
        print('')
    
    }
    print('')
    print('  </div>')
    print('')
    print('')
    
    reviews_query = tep_db_query('select count(*) as count from ' + TABLE_REVIEWS + ' r, ' + TABLE_REVIEWS_DESCRIPTION + ' rd where r.products_id = \'' + HTTP_GET_VARS['products_id'] + '\' and r.reviews_id = rd.reviews_id and rd.languages_id = \'' + languages_id + '\' and reviews_status = 1');
    reviews = tep_db_fetch_array(reviews_query);
    print('')
    print('  <div class="buttonSet">')
    print('    <span class="buttonAction">')
    
    print(tep_draw_hidden_field('products_id', product_info['products_id']) + tep_draw_button(IMAGE_BUTTON_IN_CART, 'cart', null, 'primary'));
    print('</span>')
    print('')
    print('    ')
    
    print(tep_draw_button(IMAGE_BUTTON_REVIEWS + (reviews['count'] > 0 &&  ' (' + reviews['count'] + ')'  || ''), 'comment', tep_href_link(FILENAME_PRODUCT_REVIEWS, tep_get_all_get_params())));
    print('  </div>')
    print('')
    print('')
    
    /* TODO
    if (USE_CACHE == 'true' && empty(SID)) {
        print(tep_cache_also_purchased(3600));
    } else {
        var DIR_WS_MODULES + FILENAME_ALSO_PURCHASED_PRODUCTS = include(DIR_WS_MODULES + FILENAME_ALSO_PURCHASED_PRODUCTS);
    }*/
    print('')
    print('</div>')
    print('')
    print('</form>')
    print('')
    print('')

}